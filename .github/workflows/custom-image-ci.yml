name: Build Packer Custom Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_custom_image:
    name: Build Custom Image Pipeline
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: ${{ secrets.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.12.2'

      - name: Install dependencies
        run: npm install

      - name: Run integration tests
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          PORT: ${{ secrets.PORT }}
        run: npm test

      - name: Build application artifact
        run: |
          npm run build
          # Ensure the artifact is generated in the 'dist' folder
          mkdir -p dist
          cp -R dist/* ./dist/ # Adjust this line as needed

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Change to your desired region

      - name: Build Packer Custom Image
        working-directory: infra
        run: |
          packer build \
          -var "app_path=./dist" \
          -var "service_name=my_app_service" \
          -var "aws_region=${{ secrets.AWS_REGION }}" \
          -var "source_ami=${{ secrets.SOURCE_AMI }}" \
          -var "ami_name=csye6225-ami-{{timestamp}}" \
          -var "instance_type=t2.small" \
          -var "subnet_id=${{ secrets.SUBNET_ID }}" \
          -var "ssh_username=ubuntu" \
          aws.pkr.hcl
